<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vfc.drive">

<!--검색차량리스트sql 24.11.28 jeonghyewon -->
	<sql id="selectCarListSql">
		(
			select
			row_number() over() as rn,
			T2.*
			from
			(
				select
					T1.*
				from
				(
					select
						vhcl_reg_no,
						drmc.vin,
						carmdl,
						mdlyr,
						vhcl_nm,
						bzmn_sn,
						engine_fom,
						use_yn,
						sgg_cd,
						ownr_nm,
						to_char(reg_dt, 'yyyy-mm-dd') as reg_dt,
						fvrts.reg_yn
					from
					dqvs.dvs_rac_mt_car drmc
					left join (
						select
						vin ,
						mdfr_sn,
						'Y' as reg_yn
						from
						dqvs.dvs_rac_mt_fvrts
						where
						mdfr_sn = #{userSn}::numeric ) as fvrts on drmc.vin = fvrts.vin
				where
					use_yn = 'Y'
					<if test="carNum != '' and carNum != null">
						and vhcl_reg_no like '%' || #{carNum} || '%'
					</if>
					<choose>
						<when test= "crno != '' and crno != null">
							AND crno = #{crno}
						</when>
						<otherwise>
							AND 1 != 1
						</otherwise>
					</choose>
				) T1
			) T2
			order by case when T2.reg_yn = 'Y' then 0 else 1 end, T2.vhcl_reg_no
		) T3

	</sql>

	<!--검색차량리스트 24.11.28 jeonghyewon -->
	<select id="selectCarList" resultType="resultMap">
		select T3.*
		from <include refid="selectCarListSql"/>
		where
			1 = 1
			<if test="take != '' and take != null">
				AND T3.rn <![CDATA[<=]]> (CAST(#{take} AS INTEGER) + CAST(#{skip} AS INTEGER))
			</if>
			<if test="skip != '' and skip != null">
				AND T3.rn <![CDATA[>]]> CAST(#{skip} AS INTEGER)
			</if>
		order by T3.rn asc
	</select>

	<!--검색차량리스트cnt 24.11.28 jeonghyewon -->
	<select id="selectCarListCnt" resultType="int">
		select count(T3.*)
		from <include refid="selectCarListSql"/>
	</select>

	<select id="selectVerifyCd" resultType="resultMap">
		select cd, cd_nm from dqvs.dvs_cmm_mt_code where cd_group = 'verify_cd' and use_yn ='Y' and del_yn = 'N'
		<if test="cd != '' and cd != null">
			and cd = #{cd}
		</if>
	</select>

	<select id="selectRentNo" resultType="resultMap">
		select (((('R'::text || to_char(now(), 'YY'::text)) || '-'::text) || lpad(nextval(('seq_dvs_dqv_mt_rent_'::text || to_char(now(), 'YY'::text))::regclass)::text, 9, '0'::text))) as rentNo
	</select>

	<insert id="insertRentInfo">
		INSERT INTO dqvs.dvs_dqv_mt_rent
		(rent_no, vin, vhcl_reg_no, bzmn_sn, use_yn, sgg_cd, vrfc_hstry_sn, rent_bgng_dt, rent_end_dt, rent_stts_cd, rgtr_sn, reg_dt, reg_ip)
		VALUES(#{rentno}, #{vin}, #{carNum}, #{bzmnSn}, #{useYn}, #{signguCd}, #{sn}, to_timestamp(#{startDt}, 'yyyymmdd'), to_timestamp(#{endDt}, 'yyyymmdd'), '1', #{rgtrSn}::numeric, now()::timestamp, #{regIp})
	</insert>

	<insert id="insertRentHstryInfo">
		<if test="rentno != null and rentno != ''">
				INSERT INTO dqvs.dvs_dqv_hs_rent
			<choose>
				<when test="rgtrSn != null and rgtrSn != ''">
					(rent_no, vin, vhcl_reg_no, bzmn_sn, use_yn, sgg_cd, vrfc_hstry_sn, rent_bgng_dt, rent_end_dt, rent_stts_cd, rgtr_sn, reg_dt, reg_ip,oneway_yn)
					select rent_no, vin, vhcl_reg_no, bzmn_sn, use_yn, sgg_cd, vrfc_hstry_sn, rent_bgng_dt, rent_end_dt, rent_stts_cd, rgtr_sn, reg_dt, reg_ip , oneway_yn from dqvs.dvs_dqv_mt_rent
				</when>
				<otherwise>
					(rent_no, vin, vhcl_reg_no, bzmn_sn, use_yn, sgg_cd, vrfc_hstry_sn, rent_bgng_dt, rent_end_dt, rent_stts_cd, rgtr_sn, reg_dt, reg_ip, rent_prcs_dt, mdfr_sn, mdfcn_dt, mdfcn_ip,oneway_yn)
					select rent_no, vin, vhcl_reg_no, bzmn_sn, use_yn, sgg_cd, vrfc_hstry_sn, rent_bgng_dt, rent_end_dt, rent_stts_cd, rgtr_sn, reg_dt, reg_ip, rent_prcs_dt, mdfr_sn, mdfcn_dt, mdfcn_ip , oneway_yn from dqvs.dvs_dqv_mt_rent
				</otherwise>
			</choose>
				WHERE rent_no = #{rentno}
		</if>
	</insert>


	<!-- 대여정보 대여확정 처리  -->
	<update id="updateRentSttsCd">
        <if test="rentno != null and rentno != ''">
	        UPDATE dqvs.dvs_dqv_mt_rent
			SET rent_prcs_dt=now()::timestamp,
				rent_stts_cd='2',
				oneway_yn= #{onewayYn},
				mdfr_sn=#{mdfrSn}::numeric,
				mdfcn_dt=now()::timestamp,
				mdfcn_ip=#{mdfcnIp}
			WHERE rent_no = #{rentno}
		</if>
    </update>

    <select id="selectRentCnt" resultType="int">
        with encDln as(select dqvs.pca_encrypt(#{num}, '200') as enc_d )  <!-- dln사용관련 -->
		select
			count(*)
		from
			dqvs.dvs_dqv_mt_rent n, encDln
		where
			rent_prcs_dt <![CDATA[>]]> now()::timestamp + '-7 days'
			and rent_stts_cd = '2'
		<if test="num != '' and num != null">
			and (SELECT dln_enc FROM dqvs.dvs_dqv_hs_verf v WHERE v.vrfc_hstry_sn = n.vrfc_hstry_sn) = encDln.enc_d
		</if>
	</select>

	<!-- 차대번호  -->
	<select id="selectVin" resultType="resultMap">
		select vin from dqvs.dvs_rac_mt_car
		where use_yn = 'Y'
		<if test="carNum != '' and carNum != null">
			and vhcl_reg_no = #{carNum}
		</if>
		limit 1
	</select>

	<!-- 결함정보SQL -->
	<sql id="selectDefectListSql">
		(
			SELECT ROW_NUMBER() OVER(ORDER BY d.ocrn_dt DESC) as rn
				, d.vin
				, TO_CHAR(ocrn_dt, 'YYYY-MM-DD HH24:MI') AS ocrn_dt
			   ,d.actn_yn,d.defects_cn
			FROM
				dqvs.dvs_rac_mt_defect d
			where d.actn_yn  ='N'
				<choose>
					<when test="vin != null and vin != ''">
						and vin LIKE '%' || rpad(#{vin}, 17) || '%'
					</when>
					<otherwise>
						and 1!=1
					</otherwise>
				</choose>
		) AS T
	</sql>

	<!-- 결함정보 -->
	<select id="selectDefectList" resultType="resultMap">
	/* 결함정보 */
		SELECT T.*
		FROM
			<include refid="selectDefectListSql" />
		WHERE 1 = 1
			<if test="take != '' and take != null">
				AND T.rn <![CDATA[<=]]> (CAST(#{take} AS INTEGER) + CAST(#{skip} AS INTEGER))
			</if>
			<if test="skip != '' and skip != null">
				AND T.rn <![CDATA[>]]> CAST(#{skip} AS INTEGER)
			</if>
	</select>
	<!-- 결함정보cnt -->
	<select id="selectDefectListCnt" resultType="int">
	/* 결함정보cnt */
		SELECT COUNT(*)
		FROM
			<include refid="selectDefectListSql" />
	</select>

    <insert id="insertEtcInfo">
		<if test="rentno != null and rentno != ''">
			INSERT INTO dqvs.dvs_dqv_hs_etc
			(vrfc_hstry_sn, type_cd, rslt_cd, cn)
			VALUES(#{sn}, #{typeCd}, #{rsltCd}, #{rentCnt})
		</if>
	</insert>

    <select id="selectAreaCd" resultType="resultMap">
		select cd, cd_nm from dqvs.dvs_cmm_mt_code where cd_group = 'area_cd' and use_yn ='Y' and del_yn = 'N' order by cd asc
	</select>

	<select id="selectCrno" resultType="resultMap">
		<if test="bzmnSn != null and bzmnSn != ''">
			select crno from dqvs.dvs_rac_mt_agency
			where bzmn_sn = #{bzmnSn}
		</if>
	</select>

	<!--해당 코드에 대한 공통코드 테이블에서 메시지 가져오기 -->
	<select id="getRtnMsg" resultType="resultMap">
		select cd, cd_nm
		from dqvs.dvs_cmm_mt_code dcmc
		where
			cd_group ='vrfc_rslt'
			and use_yn ='Y' and del_yn = 'N'
		<if test="fRtnCd != null and fRtnCd != ''">
			and cd = #{fRtnCd}
		</if>
	</select>

	<!-- 최근 7일 운전자격이력 건수(팝업에 이거 사용함) -->
	<select id="selectVfcHistCnt" parameterType="paraMap" resultType="int">
		/* 최근 7일 운전자격이력 건수(팝업용) */
		WITH dln_with AS (SELECT dqvs.pca_encrypt(#{dln}, '200') AS dln)
			SELECT COUNT(1) AS cnt
			FROM
				dqvs.dvs_dqv_hs_verf v, dln_with
			WHERE v.vrfc_dmnd_dt <![CDATA[>]]> NOW() - INTERVAL '7days'
				AND v.dln_enc = dln_with.dln
	</select>


	<!-- 면허번호에 해당하는 최근 7일간의 운전자격확인이력 조회 24.10.25 jeonghyewon -->
	<select id="drvListView" parameterType="paraMap" resultType="resultMap">
		SELECT *
		FROM(
			SELECT T.*
			FROM (
				WITH end_de AS (SELECT dqvs.pca_encrypt(#{dln}, '200') as dln_de)
				SELECT row_number() over( order by vrfc_dmnd_dt desc) as SN
					, vrfc_hstry_sn
					, rqstr_sn
					, drma.co_nm
					, case
					WHEN vrfc_mthd = '4' THEN
					REPEAT('*', LENGTH(viui.sso_user_nm))
					when viui.sso_user_nm is not null then
					concat(left(viui.sso_user_nm, 1), repeat('*', length(viui.sso_user_nm) - 2), right(viui.sso_user_nm, 1))
					when viui.onepass_user_nm is not null then
					concat(left(viui.onepass_user_nm, 1), repeat('*', length(viui.onepass_user_nm) - 2), right(viui.onepass_user_nm, 1))
					else null
					end as rqstr_nm
					, CONCAT(dqvs.pca_decrypt(ddhv.dln, '150'), '******') AS dln  <!-- dln사용관련 -->
					, lcns_asort_cd
					, CASE ddhv.lcns_asort_cd
					WHEN '11' THEN '1종대형'
					WHEN '12' THEN '1종보통'
					WHEN '13' THEN '1종소형'
					WHEN '14' THEN '대형견인'
					WHEN '15' THEN '구난차'
					WHEN '16' THEN '소형견인'
					WHEN '32' THEN '2종보통'
					WHEN '33' THEN '2종소형'
					WHEN '38' THEN '원동기'
					ELSE lcns_asort_cd END AS lcns_type
					, vrfc_dmnd_dt
					, rent_bgng_dt
					, rent_end_dt
					, (CASE vrfc_mthd WHEN '1' THEN '직접입력' WHEN '2' THEN 'OCR' WHEN '3' THEN '모바일면허증' when '4' then 'API' end) as vrfc_mthd
					, ddhv.vrfc_rslt_cd as verify_cd
					, CASE
					  when ddhv.req_rslt_cd = '00'or ddhv.req_rslt_cd = '1' or ddhv.req_rslt_cd = '0'
					  then dqvs.fn_get_cdnm('verify_cd', ddhv.vrfc_rslt_cd) else dqvs.fn_get_cdnm('req_rslt_cd', ddhv.req_rslt_cd)
					  end as verify_nm
					, ddhv.req_rslt_cd
					, prcs_se
					, drma.bzmn_sn
				FROM dqvs.dvs_dqv_hs_verf AS ddhv
				LEFT OUTER JOIN dqvs.v_intg_user_info AS viui  ON ddhv.rqstr_sn = viui.user_sn
				LEFT OUTER JOIN dqvs.dvs_rac_mt_agency AS drma ON viui.bzmn_sn = drma.bzmn_sn, end_de
				where  ddhv.dln_enc = end_de.dln_de
					AND vrfc_dmnd_dt <![CDATA[>=]]> now() - interval '7days'
				) T
			<choose>
				<when test="take != '' and take != null">
					<choose>
						<when test="skip != '' and skip != null"> <!-- Keyset Pagination 우선 적용 -->
							WHERE T.SN <![CDATA[>]]> #{skip}
						</when>
						<when test="page != '' and page != null"> <!-- skip 없으면 Offset Pagination -->
							OFFSET ((#{page} - 1) * #{take})
						</when>
						<otherwise>
							WHERE T.SN <![CDATA[>]]> 0
						</otherwise>
					</choose>
					LIMIT #{take}
				</when>
				<otherwise>
					LIMIT 50000	<!-- 아무런 조건이 없을 경우 최대 5만건 까지만 조회되도록 제한 -->
				</otherwise>
			</choose>
			) AS TT
	</select>

	<!--  해당 법인 차량 유무 조회 (차량결함상관없음)  24.11.05 jeonghyewon-->
	<select id="selectBzmnCarYn" resultType="int">
		select count(1)
		from
		dqvs.dvs_rac_mt_car drmc
		where
		drmc.use_yn = 'Y'
		<if test="carNum != '' and carNum != null">
			and vhcl_reg_no = #{carNum}
		</if>
		<choose>
			<when test= "crno != '' and crno != null">
				AND crno = #{crno}
			</when>
			<otherwise>
				AND 1 != 1
			</otherwise>
		</choose>
	</select>

	<!--  해당 법인 차량 결함 유무 조회  24.11.05 jeonghyewon-->
	<select id="selectBzmnDefectedCarYn" resultType="resultMap">
		select T.vhcl_reg_no,case when T.reg_yn ='Y'  then 'Y'  else 'N' end as reg_yn
		from(  select
					vhcl_reg_no,
					drmd.reg_yn
				from dqvs.dvs_rac_mt_car drmc
				left join (	select vin ,'Y' as reg_yn
					from dvs_rac_mt_defect
					where actn_yn  ='N'<!--조치여부 = N 인것만 출력 -->
					)as drmd on drmd.vin = drmc.vin
				where
					drmc.use_yn = 'Y'
						<if test="carNum != '' and carNum != null">
							and vhcl_reg_no = #{carNum}
						</if>
						<choose>
							<when test= "crno != '' and crno != null">
								AND crno = #{crno}
							</when>
							<otherwise>
								AND 1 != 1
							</otherwise>
						</choose>
		) as T
	</select>

	<!-- S권한 일 경우만 법인번호 가져오기 24.11.06 jeonghyewon-->
	<select id="selectCorpNumIfSAuthrtCd" resultType="resultMap">
		<if test="bzmnSn != null and bzmnSn != ''">
			select crno from dqvs.dvs_rac_mt_agency
			where bzmn_sn = #{bzmnSn}
		</if>
	</select>

	<!--  면허번호에 해당하는 최근 7일간의 대여이력 조회 건수 24.10.25 jeonghyewon-->
	<select id="drvListViewCnt" resultType="int">
		WITH end_de AS (SELECT dqvs.pca_encrypt(#{dln}, '200') as dln_de)
		SELECT count(1) AS cnt
		FROM dqvs.dvs_dqv_hs_verf AS ddhv
		LEFT OUTER JOIN dqvs.v_intg_user_info AS viui  ON ddhv.rqstr_sn = viui.user_sn
		LEFT OUTER JOIN dqvs.dvs_rac_mt_agency AS drma ON viui.bzmn_sn = drma.bzmn_sn, end_de
		where  ddhv.dln_enc = end_de.dln_de
			AND vrfc_dmnd_dt <![CDATA[>]]> now() - interval '7days'
	</select>


	<!-- 차량 그리드 목록 SQL -->
	<sql id="detailCarListSql">
		with carList as (
			select
				vhcl_reg_no,
				car.vin,
				carmdl,
				vhcl_nm,
				mdlyr,
				engine_fom,
				TO_CHAR(TO_DATE(frst_reg_ymd, 'YYYYMMDD'), 'YYYY-MM-DD') as frst_reg_ymd,
				TO_CHAR(TO_DATE(expry_ymd, 'YYYYMMDD') , 'YYYY-MM-DD') as expry_ymd,
				TO_CHAR(car.reg_dt, 'YYYY-MM-DD') as reg_dt,
				use_yn,
				ownr_nm,
				crno,
				use_srhld
			from
			dqvs.dvs_rac_mt_car as car
			),
		<!--대여사업자 추출-->
		filteredAgency as (
			select
				distinct on
				(crno) bzmn_sn,
				crno as agencyCrno,
				bzmn_se_cd ,
				brno ,
				co_nm,
				sgg_cd ,
				reg_cmptnc_cd ,
				ctpv_nm||' '||sgg_nm as sgg_nm
			from
			dqvs.dvs_rac_mt_agency
			left join dqvs.dvs_cmm_mt_area
			on sgg_cd = stdg_cd
			where
				bzmn_se_cd = '1'
				and bzmn_sn like 'RCC' || '%'
		),
		<!--join 추출한 대여사업자 -->
		joinAgency AS (
		SELECT
			*
		FROM
		carList
		LEFT JOIN
		filteredAgency
		ON carList.crno = filteredAgency.agencyCrno
		),
		<!--join 결함정보 -->
		joinDefect AS (
			SELECT
				DISTINCT joinAgency.*,
				CASE WHEN defect.vin IS NOT NULL THEN 'Y' ELSE 'N' END AS defect_yn,
				defect.vin ,defect.defects_cn,
				TO_CHAR(defect.ocrn_dt, 'YYYY-MM-DD HH24:MI') as ocrn_dt,
				defect.actn_yn
			FROM
			joinAgency
			LEFT JOIN dqvs.dvs_rac_mt_defect AS defect ON
			joinAgency.vin = defect.vin
		    where defect.actn_yn = 'N'
		    order by ocrn_dt desc
		),
		<!-- 조회조건 -->
		searchParams AS (
			SELECT * FROM joinDefect
			WHERE actn_yn = 'N'
			<if test="vhclRegNo != null and vhclRegNo != ''">
				and vhcl_reg_no = #{vhclRegNo}
			</if>
			<if test="crno != null and crno != ''">
				and crno = #{crno}
			</if>
			<if test="defectYn != null and defectYn != ''">
				and defect_yn = #{defectYn}
			</if>
		),
		<!-- 권한 -->
		auth AS (
		SELECT * FROM searchParams
		WHERE 1 = 1
		<choose>
			<!--S01 S02 S03 사업자 -->
			<when test='authrtCd.equals("S01") or authrtCd.equals("S02") or authrtCd.equals("S03")'>
				AND bzmn_sn = #{bzmnSn}
			</when>
			<!-- S04 플랫폼 : 미정-->
			<when test='authrtCd.equals("S04")'>
				AND crno = 'xxx'
			</when>
			<!-- 권한이 없을 경우 -->
			<otherwise>
				AND crno = 'xxx'
			</otherwise>
		</choose>
	</sql>

	<!--  해당 차량 상세 조회 :24.11.26 jeonghyewon-->
	<select id="detailCarList" resultType="resultMap">
		/* 차량 그리드 */
		<if test='
		authrtCd.equals("S01") or
		authrtCd.equals("S02") or
		authrtCd.equals("S03")
		'>
			<include refid="detailCarListSql" />
			<!-- 순번 추가 -->
			),
			rowNum AS (
			SELECT
			<if test="bookmarkOrder != '' and bookmarkOrder != null">
				ROW_NUMBER() OVER(ORDER BY CASE WHEN reg_yn = 'Y' THEN 0 ELSE 1 END, vhcl_reg_no) AS rn
			</if>
			<if test="bookmarkOrder == '' or bookmarkOrder == null">
				ROW_NUMBER() OVER(ORDER BY vhcl_reg_no) AS rn
			</if>
			, *
			FROM auth
			),
			<!-- 페이징 처리 -->
			page AS (
			SELECT * FROM rowNum
			WHERE 1=1
			<if test="take != '' and take != null">
				AND rn <![CDATA[<=]]> (CAST(#{take} AS INTEGER) + CAST(#{skip} AS INTEGER))
			</if>
			<if test="skip != '' and skip != null">
				AND rn <![CDATA[>]]> CAST(#{skip} AS INTEGER)
			</if>
			)
			SELECT * FROM page
		</if>
	</select>

	<select id="detailCarListCnt" resultType="int">
		/* 해당 차량 상세 조회 :24.11.26 jeonghyewon */
		<if test='
		authrtCd.equals("S01") or
		authrtCd.equals("S02") or
		authrtCd.equals("S03")
		'>
			<include refid="detailCarListSql" />
			)
			SELECT COUNT(1) FROM auth
		</if>
	</select>

</mapper>