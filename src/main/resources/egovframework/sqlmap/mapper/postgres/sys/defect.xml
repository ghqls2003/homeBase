<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sys.defect">
	<sql id="defectInfoSql">
		(		
			SELECT
		        ROW_NUMBER() OVER (ORDER BY defect.ocrn_dt DESC) AS rn,
		        car.vin,
		        car.vhcl_reg_no,
		        defect.defects_sn,
		        TO_CHAR(defect.ocrn_dt, 'YYYY-MM-DD') AS ocrn_dt,
		        defect.defects_type_cd,
		        defect.prcs_stts_cd,
		        COALESCE(defect.defects_cn, '-') AS defects_cn,
		        agency.co_nm,
		        COALESCE(actn.cmptn_yn, '-') AS crrtvact_rslt,
		        CASE 
		            WHEN actn.cmptn_yn = 'Y' THEN '조치'
		            WHEN actn.cmptn_yn = 'N' THEN '미조치'
		            ELSE '-'
		        END AS crrtvact_rslt_nm,
		        agency.reg_cmptnc_cd,
		        agency.bzmn_sn,
		        agency.crno AS agencyCrno
		    FROM
		        dvs_rac_mt_car car
		    LEFT JOIN dvs_rac_mt_defect defect ON car.vin = defect.vin
		    LEFT JOIN (
		        SELECT DISTINCT ON (crno) 
		            bzmn_sn,
		            crno,
		            co_nm,
		            up_brno,
		            reg_cmptnc_cd
		        FROM dvs_rac_mt_agency
		        WHERE bzmn_se_cd = '1' AND bzmn_sn LIKE 'RCC%'
	        <choose>
		    	<when test='authrtCd.indexOf("K01") != -1'> <!-- 공단 : 전체목록 -->
		       		AND 1=1
		        </when>
		        <when test='authrtCd.indexOf("G01") != -1'> <!-- 지자체 : 관할지역 내 사업자의 대여이력 -->
		        	AND reg_cmptnc_cd LIKE #{cmptncZoneCd} || '%'
		        </when>
		        <when test='authrtCd.equals("S01")'> <!-- 주사무소관리자 : 해당 사용자의 사업자일련번호를 가진 사용자 또는 해당 사업자 일련번호를 상위 사업자로 가지는 업체의 사용자가 조회한 건까지 표시 -->
		         	AND up_brno = #{bzmnSn}
					OR bzmn_sn = #{bzmnSn}
				</when>
		        <when test='authrtCd.equals("S02")'> <!-- 영업소관리자 : 해당 사업자일련번호를 가진 사용자가 조회한 건만 표시  -->
					AND bzmn_sn = #{bzmnSn}
		        </when>
		        <otherwise> <!-- 그 외는 소속 회사의 대여 건만 표시 -->
					<if test="bzmnSn != '' and bzmnSn != null">
	                	AND bzmn_sn = #{bzmnSn}
					</if>
		        </otherwise>
		    </choose>
		    ) agency ON car.crno = agency.crno
		    LEFT JOIN dvs_rac_mt_defect_actn actn ON defect.vin = actn.vin
		    WHERE
		        defect.defects_type_cd IS NOT NULL
		        AND agency.crno IS NOT NULL
					<if test="coNm != '' and coNm != null">
			           	AND agency.co_nm like '%' || #{coNm} ||'%'
					</if>
					<if test="vhclRegNo != '' and vhclRegNo != null">
			           	AND car.vhcl_reg_no like '%' || #{vhclRegNo} ||'%'
					</if>
					<if test="crrtvactRslt != '' and crrtvactRslt != null">
			           	AND crrtvact_rslt = #{crrtvactRslt}
					</if>
					<if test ='startDt != null and startDt != ""'>
				        AND defect.ocrn_dt::TIMESTAMP <![CDATA[>=]]>  #{startDt}::TIMESTAMP
				    </if>
				    <if test ='endDt != null and endDt != ""'>
				        AND defect.ocrn_dt::TIMESTAMP <![CDATA[<=]]> #{endDt}::TIMESTAMP
				    </if>	
		    ) as Ta
	</sql>
	
	<select id="selectDefectInfo" resultType="map">
		<!-- 	대여차량 결함정보 조회 -->
		select * from 
			<include refid="defectInfoSql" />
		<if test="take != '' and take != null">
			LIMIT #{take} OFFSET #{skip}
		</if>
	</select>
	
	<select id="selectDefectInfoCnt" resultType="int">
	<!-- 	대여차량 결함정보 조회 cnt-->
		SELECT
			COUNT(*)
		FROM
			<include refid="defectInfoSql"/>	
	</select>
	
	<select id="selectDefectList" resultType="map">
		<!-- 차량등록번호 중복확인 차량 결험 정보 List-->
		select * from dvs_rac_mt_defect where vin = (select vin from dvs_rac_mt_car where vhcl_reg_no = #{vhclRegNo})
	</select>
	
	<select id="selectDetailDefectInfo" resultType="resultMap">
		select 
			defects_sn,
			defects_reg_no,
			vin,
			vhcl_reg_no,
			defects_cn,
			crrtvact_strt_day,
			userSn,
			prcs_stts_cd,
			crrtvact_yn,
			case crrtvact_yn when 'Y' then '시정 완료' when 'N' then '시정 미완료' else '-' end as crrtvact_yn_nm,
			reg_dt,
			cmptn_yn,
			case cmptn_yn when 'Y' then '조치 완료' when 'N' then '조치 미완료' else '-' end as cmptn_yn_nm,
			crrtvact_ttl
		from (	 
			select 
				defects_sn,
				coalesce(actn.defects_reg_no,'-') as defects_reg_no, 
				defect.vin, 
				vhcl_reg_no,
				defects_cn,
				crrtvact_strt_day,
				#{userSn} ::numeric as userSn,
				prcs_stts_cd, 
				actn.crrtvact_yn, 
				actn.reg_dt,
				cmptn_yn ,
				coalesce(crrtvact_ttl,'-') as crrtvact_ttl
			from 
				(select * from dvs_rac_mt_defect) defect 
			left join 
				dvs_rac_mt_defect_actn actn 
			on 
				defect.vin = actn.vin
			left join 
			 	dvs_rac_mt_car car 
			on 
				defect.vin = car.vin
			where 
				defect.vin = #{vin}
		) joinedTable	
	</select>
	
	<select id="selectDetailDefectInfoCnt" resultType="int">
	select 
		count(*) 
	from (
		select	
			defects_sn, 
			defects_reg_no,
			vin,
			vhcl_reg_no,
			defects_cn,
			crrtvact_strt_day,
			userSn,
			prcs_stts_cd,
			crrtvact_yn,
			case crrtvact_yn when 'Y' then '시정 완료' when 'N' then '시정 미완료' else '-' end as crrtvact_rslt_nm,
			reg_dt,
			cmptn_yn,
			case cmptn_yn when 'Y' then '조치 완료' when 'N' then '조치 미완료' else '-' end as crrtvact_rslt_nm,
			crrtvact_ttl
		from (	 
			select 
				defects_sn,
				actn.defects_reg_no, 
				defect.vin, 
				vhcl_reg_no,
				defects_cn,
				crrtvact_strt_day,
				#{userSn} ::numeric as userSn,
				prcs_stts_cd, 
				actn.crrtvact_yn, 
				actn.reg_dt,
				cmptn_yn,
				coalesce(crrtvact_ttl,'-') as crrtvact_ttl
			from 
				(select * from dvs_rac_mt_defect) defect 
			left join 
				dvs_rac_mt_defect_actn actn 
			on defect.vin = actn.vin
			left join 
			 	dvs_rac_mt_car car 
			on defect.vin = car.vin
			where defect.vin = #{vin}
		) as joinedTable 	
	) as Tm
	</select>
	
    <select id="selectCtpvNm" resultType="map">
    <!--  - 시도(전체) -->
        select distinct
		    substring(stdg_cd, 1, 2) AS ctpv_cd, 
		    ctpv_nm
		from
		    dqvs.dvs_cmm_mt_area
		where mtnabn_yn = 'Y'
		order by
		    ctpv_cd
    </select>
    
    
    <select id="selectSggNm" resultType="map">
    <!--  - 시군구(전체) -->
        select distinct
			SUBSTRING(stdg_cd, 3, 3) AS sgg_cd, 
			sgg_nm,
			SUBSTRING(stdg_cd,0,5) as full_sgg_cd
		from dqvs.dvs_cmm_mt_area
		where mtnabn_yn = 'Y'
			and sgg_nm != ''
		<if test="ctpvCd != null and ctpvCd != ''">
			and stdg_cd LIKE CONCAT(#{ctpvCd}, '%')
		</if>
		order by sgg_cd
    </select>
    
</mapper>