<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sys.inspectionHist">
	
	<!-- 회사명 자동 검색 -->
	<select id="AgencyList" resultType="resultMap">
		select
			bzmn_sn,
			co_nm
		from
			dqvs.dvs_rac_mt_agency
		where 1=1
		and bsn_stts_cd = '0'
		<if test="userCmptncZoneCd != '' and userCmptncZoneCd != null">
			and reg_cmptnc_cd like #{userCmptncZoneCd} || '%'
		</if>
    </select>
    
    <!-- 회사 정보 검색 -->
	<select id="AgencyInfo" resultType="resultMap">
		select
			bzmn_sn
			, co_nm
			, rprsv_nm
			, brno
			, bsn_stts_mdfcn_dt
			, reg_cmptnc_cd
			, dqvs.pca_decrypt(telno,
			'150') as agency_telno
			, CONCAT( (
			select
					ctpv_nm
			from
					dqvs.dvs_cmm_mt_area
			where
					stdg_cd = reg_cmptnc_cd),
				' ',
				(
			select
					sgg_nm
			from
					dqvs.dvs_cmm_mt_area
			where
					stdg_cd = reg_cmptnc_cd)) jurisdiction
			, CONCAT(
		    (SELECT ctpv_nm FROM dqvs.dvs_cmm_mt_area WHERE stdg_cd = sgg_cd), ' ',
		    (SELECT sgg_nm FROM dqvs.dvs_cmm_mt_area WHERE stdg_cd = sgg_cd)) locgov		
			, (
			select
				cd.cd_nm
			from
				dqvs.dvs_cmm_mt_code cd
			where
				cd.cd_group = 'bsn_stts_cd'
				and cd.cd = bsn_stts_cd) bsn_stts_nm
		from
			dqvs.dvs_rac_mt_agency
		where
			bzmn_sn = #{bzmnSn}
    </select>
	
	
	<!-- 검색/등록팝업 옵션 - 시도(전체) -->
	<select id="CtpvNm" resultType="map">
	    /* 시도(전체) */
        SELECT DISTINCT LPAD(stdg_cd, 2) ctpv_cd
        	, ctpv_nm
		FROM
			dqvs.dvs_cmm_mt_area
		WHERE mtnabn_yn = 'Y'
		<if test="userCmptncZoneCd != null and userCmptncZoneCd != ''">
			AND stdg_cd = #{userCmptncZoneCd}
		</if>
		ORDER BY ctpv_cd
    </select>

    <!-- 검색/등록팝업 옵션 - 시군구(전체) -->
	<select id="SggNm" resultType="map">
        select distinct
			SUBSTRING(stdg_cd, 3, 3) AS sgg_cd, sgg_nm
		from dqvs.dvs_cmm_mt_area
		where mtnabn_yn = 'Y'
			and sgg_nm != ''
		<if test="ctpvCd != null and ctpvCd != ''">
			and stdg_cd LIKE CONCAT(#{ctpvCd}, '%')
		</if>
		<if test="userCmptncZoneCd != null and userCmptncZoneCd != ''">
			and stdg_cd = #{userCmptncZoneCd}
		</if>
		order by sgg_cd
    </select>
    
    <!-- 검색옵션 - 영업상태(전체) -->
	<select id="BsnStts" resultType="map">
        SELECT cd.cd
        	, cd.cd_nm
		FROM 
			dqvs.dvs_cmm_mt_code cd
		WHERE cd.cd_group = 'bsn_stts_cd'
			AND cd.use_yn != 'N'
		<if test="sttsInsertCont != null and sttsInsertCont != '' and sttsInsertCont == 'sttsDrop'">
			AND cd.cd != '3'
		</if>
		ORDER BY cd.cd
    </select>
    
    <!-- 검색옵션 - 권한(전체) -->
	<select id="selectAuth" resultType="map">
        SELECT cd.cd
        	, cd.cd_nm
		FROM 
			dqvs.dvs_cmm_mt_code cd
		WHERE cd_group = 'offc_type_cd'
			AND use_yn != 'N'
		ORDER BY cd.cd
    </select>
	
	
	<sql id="InspectionHistInfoSql">
	(		
		WITH inspctnData AS(
			SELECT ROW_NUMBER() OVER(ORDER BY T1.reg_dt DESC) rn
				, T1.*
				from(
					select
						inspctn.bzmn_sn
						, inspctn.exmnr
						, inspctn.exmnr2
						, inspctn.exmnr3
						, inspctn.jbgd
						, inspctn.jbgd2
						, inspctn.jbgd3
						, inspctn.ogdp
						, inspctn.ogdp2
						, inspctn.ogdp3
						, dqvs.pca_decrypt(inspctn.telno, '150') as telno
						, inspctn.chck_artcl
						, inspctn.etc_artcl
						, inspctn.chck_cn
						, inspctn.chck_plc
						, TO_CHAR(inspctn.chck_ymd, 'YYYY-MM-DD') as chck_ymd
						, TO_CHAR(inspctn.reg_dt, 'YYYY-MM-DD HH24:MI:SS') as reg_dt
						, inspctn.sign_yn
						, inspctn.chck_rslt
						, inspctn.chck_idfr
						, inspctn.idfr_jbgd
						, inspctn.idfr_ogdp
						, inspctn.prcs_cn
						, inspctn.del_yn
						, inspctn.file_atch_sn1
						, inspctn.file_atch_sn2
						, inspctn.file_atch_sn3
						, inspctn.file_atch_sn4
						, agency.reg_cmptnc_cd
						, agency.sgg_cd
						, agency.brno
						, agency.crno
						, agency.rprsv_nm
						, agency.bsn_stts_cd
						, agency.bzmn_se_cd
						, (select
							cd_nm
						from
							dqvs.dvs_cmm_mt_code
						where
							cd_group = 'bzmn_se_cd'
							and cd = bzmn_se_cd) as bzmn_se_nm
						, agency.co_nm
						, agency.road_nm_addr
						, (
						select
							cd.cd_nm
						from
							dqvs.dvs_cmm_mt_code cd
						where
							cd.cd_group = 'bsn_stts_cd'
							and cd.cd = agency.bsn_stts_cd) bsn_stts_nm
						, agency.bsn_stts_mdfcn_dt
						, dqvs.pca_decrypt(agency.telno, '150') as agency_telno
						, CONCAT( (
							select
								ctpv_nm
							from
								dqvs.dvs_cmm_mt_area
							where
								stdg_cd = agency.reg_cmptnc_cd),
							' ',
							(
							select
								sgg_nm
							from
								dqvs.dvs_cmm_mt_area
							where
								stdg_cd = agency.reg_cmptnc_cd)) jurisdiction
						, CONCAT(
					    (SELECT ctpv_nm FROM dqvs.dvs_cmm_mt_area WHERE stdg_cd = agency.sgg_cd), ' ',
					    (SELECT sgg_nm FROM dqvs.dvs_cmm_mt_area WHERE stdg_cd = agency.sgg_cd)) locgov	
						,(
						select
							atch_file_nm
						from
							dqvs.dvs_cmm_mt_file
						where
							file_sn = inspctn.file_atch_sn1) as file_atch_nm1,
						(
						select
							atch_file_nm
						from
							dqvs.dvs_cmm_mt_file
						where
							file_sn = inspctn.file_atch_sn2) as file_atch_nm2,
						(
						select
							atch_file_nm
						from
							dqvs.dvs_cmm_mt_file
						where
							file_sn = inspctn.file_atch_sn3) as file_atch_nm3,
						(
						select
							atch_file_nm
						from
							dqvs.dvs_cmm_mt_file
						where
							file_sn = inspctn.file_atch_sn4) as file_atch_nm4
					from dqvs.dvs_spv_hs_inspctn inspctn
					left join dqvs.dvs_rac_mt_agency agency on agency.bzmn_sn = inspctn.bzmn_sn
				) as T1
				WHERE 1 = 1
				and (T1.del_yn != 'Y' or T1.del_yn is null)
				<choose>
				    <when test='searchChk == "jurisdiction" and cmptncZoneCd != "" and cmptncZoneCd != null and authrtCd != "S01"' >
				        AND T1.reg_cmptnc_cd like #{cmptncZoneCd} || '%'
				    </when>
				    <when test='searchChk == "location" and cmptncZoneCd != "" and cmptncZoneCd != null'>
				        AND T1.sgg_cd like #{cmptncZoneCd} || '%'
				    </when>
				</choose>
				<if test='bzmnSeCd != "" and bzmnSeCd != null'>
					AND T1.bzmn_se_cd = #{bzmnSeCd}
				</if>
				<if test='bsnSttsCd != "" and bsnSttsCd != null'>
					AND T1.bsn_stts_cd = #{bsnSttsCd}
				</if> 
				<if test="chckRslt != null and chckRslt != ''">
					AND T1.chck_rslt = #{chckRslt}
				</if>
				<if test='searchWrd != "" and searchWrd != null'>
					<choose>
						<when test='selectCond.equals("1")'>
							AND T1.co_nm LIKE '%'|| #{searchWrd} ||'%'
						</when>
						<when test='selectCond.equals("2")'>
							AND T1.brno LIKE '%'|| #{searchWrd} ||'%'
						</when> 
						<when test='selectCond.equals("3")'>
							AND T1.crno LIKE '%'|| #{searchWrd} ||'%'
						</when>
					</choose>
				</if>
				ORDER BY rn asc
		),
		exmnrCount as (
		 	select *,(CASE WHEN exmnr != '' THEN 1 ELSE 0 END +
		         CASE WHEN exmnr2 != '' THEN 1 ELSE 0 END +
		         CASE WHEN exmnr3 != '' THEN 1 ELSE 0 END) AS exmnr_null_count
		    FROM inspctnData
		)
		select *,
		    CASE
		        WHEN exmnr_null_count = 1 THEN COALESCE(exmnr, exmnr2, exmnr3)
		        WHEN exmnr_null_count = 2 THEN
		            CASE
		                WHEN exmnr IS NOT NULL THEN CONCAT(exmnr, ' 외 1명')
		                ELSE CONCAT(exmnr2, ' 외 1명')
		            END
		        when exmnr_null_count = 3 THEN CONCAT(exmnr, ' 외 2명')
		    END AS exmnrs from exmnrCount
	)as T2
	</sql>

	<!-- 지도점검이력 그리드 -->
	<select id="InspectionHistInfo" resultType="resultMap">
		SELECT *
    	FROM
			<include refid="InspectionHistInfoSql" />
		<if test="take != '' and take != null">
			WHERE T2.rn <![CDATA[<=]]> (CAST(#{take} AS INTEGER) + CAST(#{skip} AS INTEGER))
		</if>
		<if test="skip != '' and skip != null">
			AND T2.rn <![CDATA[>]]> CAST(#{skip} AS INTEGER)
		</if>
	</select>
	
	<select id="InspectionHistInfoCnt" resultType="int">
		SELECT
			COUNT(*)
		FROM
			<include refid="InspectionHistInfoSql" />
	</select>
	
	<insert id="insertInspectionHist">
			insert into dqvs.dvs_spv_hs_inspctn
				(bzmn_sn
				, reg_cmptnc_cd
				, exmnr
				, exmnr2
				, exmnr3
				, jbgd
				, jbgd2
				, jbgd3
				, ogdp
				, ogdp2
				, ogdp3
				, telno
				, chck_artcl
				, etc_artcl
				, chck_ymd
				, chck_cn
				, chck_plc
				, sign_yn
				, chck_rslt
				, chck_idfr
				, idfr_jbgd
				, idfr_ogdp
				, file_atch_sn1
				, file_atch_sn2
				, file_atch_sn3
				, file_atch_sn4
				, prcs_cn
				, reg_ip
				, reg_dt
				)
			values(
				#{bzmnSn}
				, #{regCmptncCd}
				, #{exmnr}
				, #{exmnr2}
				, #{exmnr3}
				, #{jbgd}
				, #{jbgd2}
				, #{jbgd3}
				, #{ogdp}
				, #{ogdp2}
				, #{ogdp3}
				, dqvs.pca_encrypt(#{telno}, '150')
				, #{chckArtcl}
				, #{etcArtcl}
				, #{chckYmd}::date
				, #{chckCn}
				, #{chckPlc}
				, #{signYn}
				, #{chckRslt}
				, #{chckIdfr}
				, #{idfrJbgd}
				, #{idfrOgdp}
				, #{fileAtchSn1}::NUMERIC
				, #{fileAtchSn2}::NUMERIC
				, #{fileAtchSn3}::NUMERIC
				, #{fileAtchSn4}::NUMERIC
				, #{prcsCn}
				, #{regIp}
				, now()::timestamp
				)
	</insert>
	
	<update id="updateInspectionHist">
		<if test="bzmnSn != null and bzmnSn != '' and regDt != null and regDt != ''">
			update
				dqvs.dvs_spv_hs_inspctn
			set
				bzmn_sn = #{newBzmnSn},
				reg_cmptnc_cd = #{regCmptncCd},
				exmnr = #{exmnr},
				exmnr2 = #{exmnr2},
				exmnr3 = #{exmnr3},
				jbgd = #{jbgd},
				jbgd2 = #{jbgd2},
				jbgd3 = #{jbgd3},
				ogdp = #{ogdp},
				ogdp2 = #{ogdp2},
				ogdp3 = #{ogdp3},
				telno = dqvs.pca_encrypt(#{telno}, '150'),
				chck_artcl = #{chckArtcl},
				etc_artcl = #{etcArtcl},
				chck_ymd = #{chckYmd}::date,
				chck_cn = #{chckCn},
				chck_plc = #{chckPlc},
				sign_yn = #{signYn},
				chck_rslt = #{chckRslt},
				chck_idfr = #{chckIdfr},
				idfr_jbgd = #{idfrJbgd},
				idfr_ogdp = #{idfrOgdp},
				file_atch_sn1 = #{fileAtchSn1}::NUMERIC,
				file_atch_sn2 = #{fileAtchSn2}::NUMERIC,
				file_atch_sn3 = #{fileAtchSn3}::NUMERIC,
				file_atch_sn4 = #{fileAtchSn4}::NUMERIC,
				prcs_cn = #{prcsCn},
				mdfcn_ip = #{mdfcnIp},
				mdfcn_dt= now()::timestamp
			where
				bzmn_sn = #{bzmnSn}
				AND DATE_TRUNC('second', reg_dt) = #{regDt}::timestamp
		</if>
	</update>
	
	<update id="updateDeleteYn">
		<if test="bzmnSn != null and bzmnSn != '' and regDt != null and regDt != ''">
			UPDATE dqvs.dvs_spv_hs_inspctn
			SET 
				del_yn = 'Y',
				mdfcn_ip = #{mdfcnIp},
				mdfcn_dt= now()::timestamp
			WHERE bzmn_sn = #{bzmnSn}
			AND DATE_TRUNC('second', reg_dt) = #{regDt}::timestamp
		</if>
	</update>

</mapper>