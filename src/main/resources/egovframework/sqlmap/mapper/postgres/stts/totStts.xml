<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stts.totStts">

	<!-- 대여사업자 현황 그리드 -->
	<select id="agencyAreaGrid" parameterType="paraMap" resultType="resultMap">
	/* 대여사업자 현황 그리드 */
		SELECT t2.sd_nm
			, COALESCE(TO_CHAR(t2.stts_normal, 'FM999,999,999'), '-') stts_normal
			, COALESCE(TO_CHAR(t2.accession, 'FM999,999,999'), '-') accession
			, ROUND((t2.accession/t2.stts_normal::NUMERIC)*100, 2) accession_per
			, COALESCE(TO_CHAR(t2.sedan, 'FM999,999,999'), '-') sedan
			, COALESCE(TO_CHAR(t2.van, 'FM999,999,999'), '-') van
			, COALESCE(TO_CHAR(t2.special, 'FM999,999,999'), '-') special
			, t2.sd_cd conn
		FROM 
			(
			SELECT COALESCE(t1.sd_nm, '시도 합계') sd_nm
				, SUM(t1.stts_normal_cnt) stts_normal
				, SUM(t1.accession) accession
				, SUM(t1.sedan) sedan
				, SUM(t1.van) van
				, SUM(special) special
				, t1.sd_cd
			FROM
				(
				SELECT LEFT(mstr.sgg_cd, 2) sd_cd
					, COALESCE((SELECT ctpv_nm FROM dqvs.dvs_cmm_mt_sd WHERE ctpv_cd = LEFT(mstr.sgg_cd, 2)), '-') sd_nm
					, 1 stts_normal_cnt
					, CASE WHEN (SELECT COUNT(*) FROM dqvs.dvs_cmm_mt_user usr WHERE usr.bzmn_sn = mstr.bzmn_sn) = 0 THEN 0 ELSE 1 END accession
					, COALESCE(mstr.car_noh+mstr.elcty_car_noh, 0) sedan
					, COALESCE(mstr.van_noh+mstr.elcty_van_noh, 0) van
					, 0 special
				FROM 
					dqvs.dvs_rac_mt_agency mstr
				WHERE mstr.bsn_stts_cd = '0'
				) AS t1
			GROUP BY ROLLUP((t1.sd_cd, t1.sd_nm))
			) AS t2
		ORDER BY CASE WHEN t2.sd_nm = '시도 합계' THEN 0 ELSE 1 END, t2.sd_cd ASC
	</select>
	
	<!-- 대여사업자 현황 그리드(시군구) -->
	<select id="agencyAreaDetailGrid" parameterType="paraMap" resultType="resultMap">
	/* 대여사업자 현황 그리드(시군구) */
		SELECT t2.sgg_nm
			, COALESCE(TO_CHAR(t2.stts_normal, 'FM999,999,999'), '-') stts_normal
			, COALESCE(TO_CHAR(t2.accession, 'FM999,999,999'), '-') accession
			, ROUND((t2.accession/t2.stts_normal::NUMERIC)*100, 2) accession_per
			, COALESCE(TO_CHAR(t2.sedan, 'FM999,999,999'), '-') sedan
			, COALESCE(TO_CHAR(t2.van, 'FM999,999,999'), '-') van
			, COALESCE(TO_CHAR(t2.special, 'FM999,999,999'), '-') special
			, COALESCE(LEFT(t2.sgg_cd, 2), '-') conn
		FROM 
			(
			SELECT COALESCE(t1.sgg_nm, '합계') sgg_nm
				, SUM(t1.stts_normal_cnt) stts_normal
				, SUM(t1.accession) accession
				, SUM(t1.sedan) sedan
				, SUM(t1.van) van
				, SUM(special) special
				, t1.sgg_cd
			FROM
				(
				SELECT LEFT(mstr.sgg_cd, 5) sgg_cd
					, COALESCE((SELECT sgg_nm FROM dqvs.dvs_cmm_mt_sgg WHERE sgg_cd = LEFT(mstr.sgg_cd, 5)), '-') sgg_nm
					, 1 stts_normal_cnt
					, CASE WHEN (SELECT COUNT(*) FROM dqvs.dvs_cmm_mt_user usr WHERE usr.bzmn_sn = mstr.bzmn_sn) = 0 THEN 0 ELSE 1 END accession
					, COALESCE(mstr.car_noh+mstr.elcty_car_noh, 0) sedan
					, COALESCE(mstr.van_noh+mstr.elcty_van_noh, 0) van
					, 0 special
				FROM 
					dqvs.dvs_rac_mt_agency mstr
				WHERE mstr.bsn_stts_cd = '0'
				) AS t1
			GROUP BY t1.sgg_nm, t1.sgg_cd
			ORDER BY t1.sgg_cd ASC
			) AS t2	
	</select>
	
	<!-- 지자체별 가입 사용자 현황 그리드(시도) -->
	<select id="gvAccUserGrid" parameterType="paraMap" resultType="resultMap">
	/* 지자체별 가입 사용자 현황 그리드(시도) */
		SELECT B.conn
			, B.ctpv_nm
			, TO_CHAR(B.user_cnt, 'FM999,999,999') user_cnt
			, TO_CHAR(B.login_cnt, 'FM999,999,999') login_cnt
			, TO_CHAR(B.mn_use_cnt, 'FM999,999,999') mn_use_cnt
			, B.login_avg
		FROM
			(
			SELECT A.ctpv_cd conn
				, COALESCE(A.ctpv_nm, '시도 합계') ctpv_nm 
				, SUM(A.user_cnt) user_cnt
				, SUM(A.login_cnt) login_cnt
				, SUM(A.mn_use_cnt) mn_use_cnt
				, ROUND(SUM(A.login_cnt)/SUM(A.user_cnt), 2) login_avg
			FROM
				(
				SELECT CASE a1.ctpv_cd WHEN '-' THEN NULL ELSE a1.ctpv_cd END ctpv_cd
					, a1.ctpv_nm
					, a1.user_sn
					, a1.login_cnt
					, a2.mn_use_cnt
					, 1 user_cnt
				FROM
					(
					SELECT ct.ctpv_cd
						, ct.ctpv_nm
						, a.*
					FROM
						(
						SELECT sd.ctpv_cd, sd.ctpv_nm
						FROM
							dqvs.dvs_cmm_mt_sd sd
						WHERE sd.ctpv_cd != '45'
						UNION
						SELECT '-', '-'
						) AS ct
					LEFT OUTER JOIN
						(
						SELECT t1.user_sn
							, t1.authrt_cd
							, t1.cmptnc
							, SUM(CASE WHEN login.cntn_dt NOTNULL THEN 1 ELSE 0 END) login_cnt
						FROM
							(
							SELECT main.user_sn
								, main.authrt_cd
								, LEFT(CASE WHEN main.cmptnc_zone_cd = '' OR main.cmptnc_zone_cd ISNULL THEN '-'
											WHEN main.cmptnc_zone_cd LIKE '42%' THEN '51' 
											WHEN main.cmptnc_zone_cd LIKE '45%' THEN '52' 
											ELSE main.cmptnc_zone_cd END, 2) cmptnc
							FROM
								dqvs.dvs_cmm_mt_user main
							WHERE main.acnt_stts_cd NOT IN ('6', '5')
							   	AND main.aprv_stts_cd = '2'
							   	AND main.authrt_cd IN ('G01', 'G02', 'S01', 'S02', 'S03', 'S04')
							) AS t1
						LEFT OUTER JOIN
							(SELECT * FROM dqvs.dvs_cmm_hs_login WHERE cntn_type_cd = 'I') login
						ON t1.user_sn = login.user_sn
						GROUP BY t1.user_sn
							, t1.authrt_cd
							, t1.cmptnc
						) AS a
					ON ct.ctpv_cd = a.cmptnc
					) AS a1
				LEFT OUTER JOIN
					(
					SELECT t1.user_sn
						, SUM(CASE WHEN sys.dmnd_dt NOTNULL THEN 1 ELSE 0 END) mn_use_cnt
					FROM
						(
						SELECT main.user_sn
						FROM
							dqvs.dvs_cmm_mt_user main
						WHERE main.acnt_stts_cd NOT IN ('6', '5')
						   	AND main.aprv_stts_cd = '2'
						) AS t1
					LEFT OUTER JOIN
						dqvs.dvs_cmm_hs_sys sys
					ON t1.user_sn = sys.user_sn
					GROUP BY t1.user_sn
					) AS a2
				ON a1.user_sn = a2.user_sn
				<if test="authrt != null and authrt != ''">
					WHERE a1.authrt_cd = #{authrt}
				</if>
				) AS A
			GROUP BY ROLLUP((A.ctpv_cd, A.ctpv_nm))
			) AS B
		ORDER BY CASE WHEN B.ctpv_nm = '시도 합계' THEN 0 ELSE 1 END, B.conn ASC
	</select>
	
	<!-- 지자체별 가입 사용자 현황 그리드(시군구) -->
	<select id="gvAccUserDetailGrid" parameterType="paraMap" resultType="resultMap">
	/* 지자체별 가입 사용자 현황 그리드(시군구) */
		SELECT B.conn
			, B.sgg_nm
			, TO_CHAR(B.user_cnt, 'FM999,999,999') user_cnt
			, TO_CHAR(B.login_cnt, 'FM999,999,999') login_cnt
			, TO_CHAR(B.mn_use_cnt, 'FM999,999,999') mn_use_cnt
			, B.login_avg
		FROM
			(
			SELECT LEFT(A.sgg_cd, 2) conn
				, A.sgg_nm
				, SUM(A.user_cnt) user_cnt
				, SUM(A.login_cnt) login_cnt
				, SUM(A.mn_use_cnt) mn_use_cnt
				, ROUND(CASE WHEN SUM(A.login_cnt) = 0 OR SUM(A.user_cnt) = 0 THEN 0 ELSE SUM(A.login_cnt)/SUM(A.user_cnt)END, 2) login_avg
			FROM
				(
				SELECT  CASE a1.sgg_cd WHEN '-' THEN NULL ELSE a1.sgg_cd END sgg_cd
					, a1.sgg_nm
					, a1.user_sn
					, COALESCE(a1.login_cnt, 0) login_cnt
					, COALESCE(a2.mn_use_cnt, 0) mn_use_cnt
					, CASE WHEN a1.user_sn ISNULL THEN 0 ELSE 1 END user_cnt
				FROM
					(
					SELECT sgg.sgg_cd
						, sgg.sgg_nm
						, a.*
					FROM
						(
						SELECT sgg.sgg_cd, sgg.sgg_nm
						FROM
							dqvs.dvs_cmm_mt_sgg sgg
						UNION
						SELECT '-', '-'
						) AS sgg
					LEFT OUTER JOIN				
						(
						SELECT t1.user_sn
							, t1.authrt_cd
							, t1.cmptnc
							, SUM(CASE WHEN login.cntn_dt NOTNULL THEN 1 ELSE 0 END) login_cnt
						FROM
							(
							SELECT main.user_sn
								, main.authrt_cd
								, LEFT(CASE WHEN main.cmptnc_zone_cd = '' OR main.cmptnc_zone_cd ISNULL THEN '-'
													WHEN main.cmptnc_zone_cd LIKE '42%' THEN CONCAT('51', SUBSTRING(main.cmptnc_zone_cd, 3))
													WHEN main.cmptnc_zone_cd LIKE '45%' THEN CONCAT('52', SUBSTRING(main.cmptnc_zone_cd, 3))
													ELSE main.cmptnc_zone_cd END, 5) cmptnc
							FROM
								dqvs.dvs_cmm_mt_user main
							WHERE main.acnt_stts_cd NOT IN ('6', '5')
							   	AND main.aprv_stts_cd = '2'
							   	AND main.authrt_cd IN ('G01', 'G02', 'S01', 'S02', 'S03', 'S04')
							) AS t1
						LEFT OUTER JOIN
							(SELECT * FROM dqvs.dvs_cmm_hs_login WHERE cntn_type_cd = 'I') login
						ON t1.user_sn = login.user_sn
						GROUP BY t1.user_sn
							, t1.authrt_cd
							, t1.cmptnc
						) AS a
					ON sgg.sgg_cd = a.cmptnc
					) AS a1
				LEFT OUTER JOIN
					(
					SELECT t1.user_sn
						, SUM(CASE WHEN sys.dmnd_dt NOTNULL THEN 1 ELSE 0 END) mn_use_cnt
					FROM
						(
						SELECT main.user_sn
						FROM
							dqvs.dvs_cmm_mt_user main
						WHERE main.acnt_stts_cd NOT IN ('6', '5')
						   	AND main.aprv_stts_cd = '2'
						) AS t1
					LEFT OUTER JOIN
						dqvs.dvs_cmm_hs_sys sys
					ON t1.user_sn = sys.user_sn
					GROUP BY t1.user_sn
					) AS a2
				ON a1.user_sn = a2.user_sn
				<if test="authrt != null and authrt != ''">
					WHERE a1.authrt_cd = #{authrt}
				</if>
				) AS A
			GROUP BY A.sgg_nm, A.sgg_cd
			ORDER BY A.sgg_cd
			) AS B
	</select>	
	
	<!-- 대여사업자 등록 현황 -->
	<select id="agencyAccessionChart" parameterType="paraMap" resultType="resultMap">
	/* 대여사업자 가입 현황 */	
		SELECT t2.sd_nm
			, COALESCE(t2.stts_normal, 0) stts_normal
		FROM 
			(
			SELECT t1.sd_nm
				, SUM(t1.stts_normal_cnt) stts_normal
				, t1.sd_cd
			FROM
				(
				SELECT LEFT(mstr.sgg_cd, 2) sd_cd
					, COALESCE((
								SELECT CASE sd.ctpv_cd WHEN '46' THEN '전남' WHEN '47' THEN '경북' WHEN '48' THEN '경남' ELSE LEFT(sd.ctpv_nm, 2) END sd_nm 
								FROM dqvs.dvs_cmm_mt_sd sd WHERE sd.ctpv_cd = LEFT(mstr.sgg_cd, 2)), '-') sd_nm
					, 1 stts_normal_cnt
				FROM 
					dqvs.dvs_rac_mt_agency mstr
				WHERE mstr.bsn_stts_cd = '0'
				) AS t1
			GROUP BY t1.sd_cd, t1.sd_nm
			) AS t2
		ORDER BY t2.sd_cd
	</select>
	
	<!-- 권한 가져오기 -->
	<select id="authrt" parameterType="paraMap" resultType="resultMap">
	/* 권한 가져오기 */
		SELECT authrt_cd
			, authrt_nm
		FROM
			dqvs.dvs_cmm_mt_auth
		WHERE authrt_cd IN ('G01', 'G02', 'S01', 'S02', 'S03', 'S04')
		ORDER BY authrt_cd 
	</select>
	
	<!-- 카쉐어링 업체 현황 SQL -->
	<sql id="carShareGridSql">
		(
		SELECT ROW_NUMBER() OVER(ORDER BY cs.sn) rn
			, cs.sn
			, cs.se
			, cs.co_nm 
			, COALESCE(cs.reg_noh, 0) reg_noh
			, COALESCE(cs.mbr_cnt, 0) mbr_cnt 
			, cs.bsnoffice
			, COALESCE(cs.bsnoffice_cnt, 0) bsnoffice_cnt
			, cs.rsrvtnoffice 
			, COALESCE(cs.rsrvtnoffice_cnt, 0) rsrvtnoffice_cnt
			, cs.rmrk 
			, cs.del_yn
		FROM
			dvs_st_mt_carshare cs
		WHERE del_yn ISNULL
		) AS T
	</sql>
	
	<!-- 카쉐어링 업체 현황 -->
	<select id="carShareGrid" parameterType="paraMap" resultType="resultMap">
	/* 카쉐어링 업체 현황 */
		SELECT T.*
		FROM
			<include refid="carShareGridSql" />
	</select>
	
	<!-- 카쉐어링 업체 현황 -->
	<select id="carShareGridCnt" parameterType="paraMap" resultType="int">
	/* 카쉐어링 업체 현황 */
		SELECT COUNT(T.*)
		FROM
			<include refid="carShareGridSql" />
	</select>
	
	<!-- 지역 드롭다운 -->
	<select id="areaDrop" parameterType="paraMap" resultType="resultMap">
	/* 지역 드롭다운 */
		SELECT DISTINCT LPAD(stdg_cd, 2) ctpv_cd
        	, ctpv_nm
		FROM
			dqvs.dvs_cmm_mt_area
		WHERE mtnabn_yn = 'Y'
		<if test="regCmptncCd != null and regCmptncCd != ''">
			AND stdg_cd = #{regCmptncCd}
		</if>
		ORDER BY ctpv_cd
	</select>
	
	<!-- 카쉐어링 업체 등록 -->
	<insert id="insertCarShare">
	/* 카쉐어링 업체 등록 */
		INSERT INTO dqvs.dvs_st_mt_carshare (
			sn, se, co_nm, reg_noh, mbr_cnt, bsnoffice, rsrvtnoffice, rmrk, del_yn, reg_dt, reg_ip, mdfcn_dt, mdfcn_ip, bsnoffice_cnt, rsrvtnoffice_cnt
		)
		VALUES (
			nextval('seq_dvs_st_mt_carshare'), #{area}, #{cmpNm}, #{regCar}::NUMERIC, #{userCnt}::NUMERIC, #{bsnOffc}, #{rsrvtnOffc}, #{rmrk}, NULL, NOW(), #{regIP}, NULL, NULL, #{bsnOffcCnt}::NUMERIC, #{rsrvtnOffcCnt}::NUMERIC
		)
	</insert>
	
	<!-- 카쉐어링 업체 상세 팝업 -->
	<select id="detailCarshare" parameterType="paraMap" resultType="resultMap">
	/* 카쉐어링 업체 상세 팝업 */
		SELECT cs.sn
			, cs.se
			, cs.co_nm 
			, COALESCE(cs.reg_noh, 0) reg_noh
			, COALESCE(cs.mbr_cnt, 0) mbr_cnt 
			, cs.bsnoffice
			, COALESCE(cs.bsnoffice_cnt, 0) bsnoffice_cnt
			, cs.rsrvtnoffice 
			, COALESCE(cs.rsrvtnoffice_cnt, 0) rsrvtnoffice_cnt
			, cs.rmrk 
		FROM
			dqvs.dvs_st_mt_carshare cs
		WHERE cs.sn = #{detailSn}
	</select>
	
	<!-- 카쉐어링 업체 수정 -->
	<update  id="updateCarShare">
	/* 카쉐어링 업체 수정 */
		UPDATE dvs_st_mt_carshare
		SET se = #{area}, reg_noh = #{regCar}::NUMERIC, mbr_cnt = #{userCnt}::NUMERIC
			, bsnoffice = #{bsnOffc}, rsrvtnoffice = #{rsrvtnOffc}, rmrk = #{rmrk}
			, mdfcn_dt = NOW(), mdfcn_ip = #{mdfcnIp}, bsnoffice_cnt = #{bsnOffcCnt}::NUMERIC
			, rsrvtnoffice_cnt = #{rsrvtnOffcCnt}::NUMERIC, co_nm = #{cmpNm}
		WHERE sn = #{detailSn}::NUMERIC
	</update>
	
	<!-- 카쉐어링 업체 삭제 -->
	<update  id="deleteCarShare">
	/* 카쉐어링 업체 삭제 */
		UPDATE dvs_st_mt_carshare
		SET rmrk = #{delRmrk}, mdfcn_dt = NOW(), mdfcn_ip = #{mdfcnIp}, del_yn = 'Y'
		WHERE sn = #{detailSn}::NUMERIC
	</update>
	
</mapper>
